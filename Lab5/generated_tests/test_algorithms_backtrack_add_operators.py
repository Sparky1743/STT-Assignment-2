# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.backtrack.add_operators as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    str_0 = '"N\'o"s2i'
    module_0.add_operators(str_0, str_0)


def test_case_1():
    tuple_0 = ()
    var_0 = module_0.add_operators(tuple_0, tuple_0)


def test_case_2():
    str_0 = "3"
    var_0 = module_0.add_operators(str_0, str_0)


def test_case_3():
    str_0 = "49"
    var_0 = module_0.add_operators(str_0, str_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    str_0 = "99"
    bool_0 = False
    var_0 = module_0.add_operators(str_0, bool_0)
    var_1 = module_0.add_operators(bool_0, bool_0)
    var_2 = module_1.object(*var_1)
    var_3 = module_1.object()
    module_0.add_operators(var_3, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "049"
    dict_0 = {str_0: str_0}
    none_type_0 = None
    var_0 = module_0.add_operators(none_type_0, str_0)
    bool_0 = True
    var_1 = module_0.add_operators(str_0, bool_0)
    var_2 = module_0.add_operators(var_1, var_1)
    var_3 = module_1.object(*var_0)
    module_1.object(**dict_0)
