# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.dp.hosoya_triangle as module_0


def test_case_0():
    bool_0 = True
    var_0 = module_0.hosoya_testing(bool_0)


def test_case_1():
    bool_0 = True
    var_0 = module_0.hosoya(bool_0, bool_0)
    assert var_0 == 1


@pytest.mark.xfail(strict=True)
def test_case_2():
    bool_0 = True
    var_0 = module_0.hosoya_testing(bool_0)
    var_1 = module_0.print_hosoya(bool_0)
    var_2 = module_0.hosoya_testing(bool_0)
    module_0.hosoya_testing(var_1)


@pytest.mark.xfail(strict=True)
def test_case_3():
    none_type_0 = None
    module_0.print_hosoya(none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bytes_0 = b"\r\xfb.G"
    list_0 = [bytes_0, bytes_0]
    tuple_0 = (list_0,)
    bool_0 = False
    module_0.hosoya(tuple_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    none_type_0 = None
    module_0.hosoya(none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    bool_0 = True
    var_0 = module_0.hosoya(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.hosoya_testing(bool_0)
    var_2 = module_0.print_hosoya(bool_0)
    var_3 = module_0.print_hosoya(bool_0)
    module_0.hosoya(var_1, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    bytes_0 = b""
    module_0.hosoya(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_8():
    bool_0 = True
    int_0 = 1730
    var_0 = module_0.print_hosoya(bool_0)
    module_0.hosoya(int_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_9():
    bool_0 = False
    var_0 = module_0.hosoya(bool_0, bool_0)
    assert var_0 == 1
    var_1 = module_0.hosoya(var_0, var_0)
    assert var_1 == 1
    var_2 = module_0.print_hosoya(bool_0)
    var_3 = module_0.hosoya(var_1, var_1)
    assert var_3 == 1
    var_4 = module_0.hosoya_testing(var_3)
    var_5 = module_0.hosoya(var_1, bool_0)
    assert var_5 == 1
    var_6 = module_0.hosoya(var_1, var_5)
    assert var_6 == 1
    var_7 = module_0.hosoya_testing(var_1)
    var_8 = module_0.print_hosoya(var_3)
    var_9 = module_0.hosoya_testing(var_1)
    var_10 = module_0.hosoya(bool_0, var_5)
    assert var_10 == 0
    module_0.hosoya_testing(var_8)
