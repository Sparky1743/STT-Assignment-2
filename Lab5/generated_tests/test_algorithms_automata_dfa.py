# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.automata.dfa as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    none_type_0 = None
    list_0 = [none_type_0]
    module_0.DFA(none_type_0, list_0, list_0, list_0)


def test_case_1():
    bool_0 = False
    list_0 = [bool_0, bool_0, bool_0, bool_0, bool_0]
    tuple_0 = (list_0, list_0, bool_0)
    var_0 = module_0.DFA(tuple_0, bool_0, tuple_0, list_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.DFA(none_type_0, none_type_0, none_type_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    tuple_0 = ()
    var_0 = module_0.DFA(tuple_0, tuple_0, tuple_0, tuple_0)
    str_0 = 'Q\r_nA$Cl"Mk?YK5Z7'
    module_0.DFA(str_0, str_0, str_0, str_0)
