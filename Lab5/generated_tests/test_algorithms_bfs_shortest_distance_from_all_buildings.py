# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.bfs.shortest_distance_from_all_buildings as module_0


def test_case_0():
    str_0 = '\x0cd"1>nG^H9'
    var_0 = module_0.shortest_distance(str_0)
    assert var_0 == 0


def test_case_1():
    none_type_0 = None
    var_0 = module_0.shortest_distance(none_type_0)
    assert var_0 == -1
    var_1 = module_0.shortest_distance(none_type_0)
    assert var_1 == -1


@pytest.mark.xfail(strict=True)
def test_case_2():
    none_type_0 = None
    module_0.bfs(none_type_0, none_type_0, none_type_0, none_type_0, none_type_0)


def test_case_3():
    int_0 = -1202
    var_0 = module_0.bfs(int_0, int_0, int_0, int_0, int_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    float_0 = 300.90133
    module_0.bfs(float_0, float_0, float_0, float_0, float_0)


def test_case_5():
    str_0 = "/"
    var_0 = module_0.shortest_distance(str_0)
    assert var_0 == 0
    var_1 = module_0.bfs(str_0, var_0, var_0, var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    str_0 = "4#}"
    var_0 = module_0.shortest_distance(str_0)
    assert var_0 == 0
    module_0.bfs(str_0, var_0, var_0, var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    str_0 = "/"
    none_type_0 = None
    list_0 = [none_type_0, none_type_0]
    var_0 = module_0.shortest_distance(list_0)
    assert var_0 == -1
    var_1 = module_0.shortest_distance(none_type_0)
    assert var_1 == -1
    var_2 = module_0.shortest_distance(str_0)
    assert var_2 == 0
    var_3 = var_1.__lt__(str_0)
    var_4 = var_2.__eq__(var_2)
    var_2.copy()
