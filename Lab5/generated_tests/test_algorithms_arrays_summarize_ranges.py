# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.arrays.summarize_ranges as module_0


def test_case_0():
    int_0 = 1002
    list_0 = [int_0]
    list_1 = module_0.summarize_ranges(list_0)
    bool_0 = True
    list_2 = [bool_0]
    list_3 = module_0.summarize_ranges(list_2)


def test_case_1():
    bytes_0 = b"!j\xd8/K.P8\xa5d\x1c\x82\x81\x91\x02i\x9d\xa6\xeb"
    list_0 = module_0.summarize_ranges(bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    tuple_0 = ()
    bool_0 = False
    bool_1 = True
    list_0 = [bool_0, bool_0, bool_1]
    list_1 = module_0.summarize_ranges(list_0)
    bool_2 = True
    list_2 = [bool_2]
    list_3 = module_0.summarize_ranges(list_2)
    list_4 = module_0.summarize_ranges(list_2)
    list_5 = module_0.summarize_ranges(list_2)
    module_0.summarize_ranges(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    int_0 = 2040
    list_0 = [int_0]
    list_1 = module_0.summarize_ranges(list_0)
    bytes_0 = b"\tap\x9d\x96\x9b\xe7\r\x87"
    int_1 = 401
    list_2 = [int_1]
    list_3 = module_0.summarize_ranges(list_2)
    bool_0 = False
    bool_1 = True
    bool_2 = True
    list_4 = [bool_0, bool_1, bool_2]
    list_5 = module_0.summarize_ranges(list_4)
    list_6 = module_0.summarize_ranges(bytes_0)
    module_0.summarize_ranges(list_6)
