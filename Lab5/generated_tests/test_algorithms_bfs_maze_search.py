# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.bfs.maze_search as module_0


def test_case_0():
    str_0 = "I"
    var_0 = module_0.maze_search(str_0)
    assert var_0 == 0


def test_case_1():
    str_0 = "~Jr;Ywbd^c"
    var_0 = module_0.maze_search(str_0)
    assert var_0 == -1


def test_case_2():
    bytes_0 = b"\x03\x1bi\x88>F\xe5\xf7/\xf3o\x19\xe4\x0b\xeeJ-\xcf\xad1"
    list_0 = [bytes_0]
    var_0 = module_0.maze_search(list_0)
    assert var_0 == -1


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    tuple_0 = (bool_0, bool_0)
    list_0 = [tuple_0, tuple_0]
    tuple_1 = module_0.maze_search(list_0)
    assert tuple_1 == -1
    module_0.maze_search(tuple_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    tuple_0 = (bool_0, bool_0)
    list_0 = [tuple_0, tuple_0]
    var_0 = module_0.maze_search(list_0)
    assert var_0 == 2
    module_0.maze_search(tuple_0)
