# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import algorithms.dp.fib as module_0


def test_case_0():
    bool_0 = False
    var_0 = module_0.fib_iter(bool_0)
    assert var_0 is False
    var_1 = module_0.fib_recursive(bool_0)
    assert var_1 is False


def test_case_1():
    bool_0 = True
    var_0 = module_0.fib_list(bool_0)
    assert var_0 == 1


def test_case_2():
    int_0 = -1806
    with pytest.raises(AssertionError):
        module_0.fib_list(int_0)


def test_case_3():
    bool_0 = True
    var_0 = module_0.fib_iter(bool_0)
    assert var_0 is True


@pytest.mark.xfail(strict=True)
def test_case_4():
    list_0 = []
    module_0.fib_iter(list_0)


@pytest.mark.xfail(strict=True)
def test_case_5():
    int_0 = 1685
    module_0.fib_recursive(int_0)


@pytest.mark.xfail(strict=True)
def test_case_6():
    int_0 = 696
    var_0 = module_0.fib_list(int_0)
    assert (
        var_0
        == 12761819912582026651843152463021215992154459394009937175978814994945746602278901851117729809857828389754249241954336943913841981426527385882330272
    )
    list_0 = []
    module_0.fib_iter(list_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 3198
    list_0 = [int_0]
    var_0 = module_0.fib_iter(int_0)
    assert (
        var_0
        == 98398508887428698144794960856238846743227777560269331946436798758380349596073647072925029088085473497820088446793354599905646872915401327435145652957498423862770798405113735466254518997501423975805462089142405672400732647026001480990493717920848931830003778058561795798921037678957067952175616454745810773415538805674896411852669669565279810016047005128019190018866627619525395778264193679060895731829254605368303380257545150129571297125977279293515352932961618582879029146236671760871697183753654460322137359863549234863925685566719159579123135635161148474189432293421689044973939902597148586531493422903458806851170181701982930485548676892136866422438891433940589224
    )
    module_0.fib_iter(list_0)


def test_case_8():
    float_0 = -3933.22
    with pytest.raises(AssertionError):
        module_0.fib_recursive(float_0)


def test_case_9():
    int_0 = -1806
    with pytest.raises(AssertionError):
        module_0.fib_iter(int_0)
