# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import algorithms.bit.has_alternative_bit as module_0


def test_case_0():
    int_0 = -3
    var_0 = module_0.has_alternative_bit(int_0)
    assert var_0 is False


def test_case_1():
    bool_0 = False
    var_0 = module_0.has_alternative_bit(bool_0)


def test_case_2():
    bool_0 = False
    var_0 = module_0.has_alternative_bit_fast(bool_0)
    assert var_0 is True


def test_case_3():
    int_0 = -3
    var_0 = module_0.has_alternative_bit(int_0)
    assert var_0 is False
    var_1 = module_0.has_alternative_bit_fast(int_0)
    assert var_1 is False
    var_2 = module_0.has_alternative_bit_fast(var_0)


def test_case_4():
    int_0 = 21
    var_0 = module_0.has_alternative_bit(int_0)
    assert var_0 is True
